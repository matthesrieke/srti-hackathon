// source: sensoris/protobuf/categories/traffic_events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var sensoris_protobuf_types_base_pb = require('../../../sensoris/protobuf/types/base_pb.js');
goog.object.extend(proto, sensoris_protobuf_types_base_pb);
var sensoris_protobuf_types_spatial_pb = require('../../../sensoris/protobuf/types/spatial_pb.js');
goog.object.extend(proto, sensoris_protobuf_types_spatial_pb);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.Hazard', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.Hazard.Direction', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.RoadWorks', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.TrafficCondition', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficevents.Hazard, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficevents.Hazard.displayName = 'proto.sensoris.protobuf.categories.trafficevents.Hazard';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.displayName = 'proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficevents.TrafficCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.displayName = 'proto.sensoris.protobuf.categories.trafficevents.TrafficCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficevents.RoadWorks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficevents.RoadWorks.displayName = 'proto.sensoris.protobuf.categories.trafficevents.RoadWorks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.displayName = 'proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.repeatedFields_, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.displayName = 'proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficevents.Hazard.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficevents.Hazard} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.toObject(includeInstance, f),
    direction: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficevents.Hazard;
  return proto.sensoris.protobuf.categories.trafficevents.Hazard.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.Hazard} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    case 4:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficevents.Hazard.Direction} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficevents.Hazard.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.Hazard} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.Direction = {
  UNKNOWN_DIRECTION: 0,
  EGO_DIRECTION: 1,
  OPPOSITE_DIRECTION: 2,
  BOTH: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  OBSTRUCTION: 1,
  ACCIDENT: 2,
  BROKEN_DOWN_VEHICLE: 3,
  SLOW_VEHICLE: 4,
  WRONG_WAY_VEHICLE: 5,
  ROADWORKS: 6
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 2;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 3;
 * @return {?proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence, 3));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficevents.Hazard.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Direction direction = 4;
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard.Direction}
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.getDirection = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficevents.Hazard.Direction} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficevents.Hazard.Direction} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.Hazard.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    speedReductionAndAccuracy: (f = msg.getSpeedReductionAndAccuracy()) && sensoris_protobuf_types_spatial_pb.XyzVectorAndAccuracy.toObject(includeInstance, f),
    timePeriod: (f = msg.getTimePeriod()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown}
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown;
  return proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown}
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_spatial_pb.XyzVectorAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_spatial_pb.XyzVectorAndAccuracy.deserializeBinaryFromReader);
      msg.setSpeedReductionAndAccuracy(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setTimePeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getSpeedReductionAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_spatial_pb.XyzVectorAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getTimePeriod();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_reduction_and_accuracy = 2;
 * @return {?proto.sensoris.protobuf.types.spatial.XyzVectorAndAccuracy}
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.getSpeedReductionAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.spatial.XyzVectorAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_spatial_pb.XyzVectorAndAccuracy, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.spatial.XyzVectorAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.setSpeedReductionAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.clearSpeedReductionAndAccuracy = function() {
  return this.setSpeedReductionAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.hasSpeedReductionAndAccuracy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Int64Value time_period = 3;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.getTimePeriod = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 3));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.setTimePeriod = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.clearTimePeriod = function() {
  return this.setTimePeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.prototype.hasTimePeriod = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficevents.TrafficCondition;
  return proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  FREE_FLOW: 1,
  HEAVY: 2,
  SLOW: 3,
  QUEUING: 4,
  STATIONARY: 5
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 2;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 3;
 * @return {?proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence, 3));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficevents.RoadWorks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.toObject(includeInstance, f),
    lanesClosedAndConfidence: (f = msg.getLanesClosedAndConfidence()) && sensoris_protobuf_types_base_pb.CountAndConfidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficevents.RoadWorks;
  return proto.sensoris.protobuf.categories.trafficevents.RoadWorks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    case 5:
      var value = new sensoris_protobuf_types_base_pb.CountAndConfidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.CountAndConfidence.deserializeBinaryFromReader);
      msg.setLanesClosedAndConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficevents.RoadWorks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getLanesClosedAndConfidence();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      sensoris_protobuf_types_base_pb.CountAndConfidence.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  START: 1,
  END: 2
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 2;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 3;
 * @return {?proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence, 3));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficevents.RoadWorks.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional sensoris.protobuf.types.base.CountAndConfidence lanes_closed_and_confidence = 5;
 * @return {?proto.sensoris.protobuf.types.base.CountAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.getLanesClosedAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.CountAndConfidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.CountAndConfidence, 5));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.CountAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.setLanesClosedAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.clearLanesClosedAndConfidence = function() {
  return this.setLanesClosedAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWorks.prototype.hasLanesClosedAndConfidence = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.toObject(includeInstance, f),
    depthAndAccuracy: (f = msg.getDepthAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition;
  return proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    case 4:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setDepthAndAccuracy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getDepthAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  SNOW: 1,
  ICE: 2,
  FREEZING_RAIN: 3,
  FROST: 4,
  HYDROPLANING: 5,
  FLOODING: 6
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 2;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 3;
 * @return {?proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence, 3));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy depth_and_accuracy = 4;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.getDepthAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 4));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.setDepthAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.clearDepthAndAccuracy = function() {
  return this.setDepthAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.prototype.hasDepthAndAccuracy = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.repeatedFields_ = [2,3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.CategoryEnvelope.toObject(includeInstance, f),
    hazardList: jspb.Message.toObjectList(msg.getHazardList(),
    proto.sensoris.protobuf.categories.trafficevents.Hazard.toObject, includeInstance),
    dangerousSlowDownList: jspb.Message.toObjectList(msg.getDangerousSlowDownList(),
    proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.toObject, includeInstance),
    trafficConditionList: jspb.Message.toObjectList(msg.getTrafficConditionList(),
    proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.toObject, includeInstance),
    roadworksList: jspb.Message.toObjectList(msg.getRoadworksList(),
    proto.sensoris.protobuf.categories.trafficevents.RoadWorks.toObject, includeInstance),
    roadWeatherConditionList: jspb.Message.toObjectList(msg.getRoadWeatherConditionList(),
    proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory;
  return proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.CategoryEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.CategoryEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new proto.sensoris.protobuf.categories.trafficevents.Hazard;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficevents.Hazard.deserializeBinaryFromReader);
      msg.addHazard(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.deserializeBinaryFromReader);
      msg.addDangerousSlowDown(value);
      break;
    case 4:
      var value = new proto.sensoris.protobuf.categories.trafficevents.TrafficCondition;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.deserializeBinaryFromReader);
      msg.addTrafficCondition(value);
      break;
    case 5:
      var value = new proto.sensoris.protobuf.categories.trafficevents.RoadWorks;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficevents.RoadWorks.deserializeBinaryFromReader);
      msg.addRoadworks(value);
      break;
    case 6:
      var value = new proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.deserializeBinaryFromReader);
      msg.addRoadWeatherCondition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.CategoryEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getHazardList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sensoris.protobuf.categories.trafficevents.Hazard.serializeBinaryToWriter
    );
  }
  f = message.getDangerousSlowDownList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown.serializeBinaryToWriter
    );
  }
  f = message.getTrafficConditionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.sensoris.protobuf.categories.trafficevents.TrafficCondition.serializeBinaryToWriter
    );
  }
  f = message.getRoadworksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.sensoris.protobuf.categories.trafficevents.RoadWorks.serializeBinaryToWriter
    );
  }
  f = message.getRoadWeatherConditionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.CategoryEnvelope}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.CategoryEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.CategoryEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.CategoryEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Hazard hazard = 2;
 * @return {!Array<!proto.sensoris.protobuf.categories.trafficevents.Hazard>}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.getHazardList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.trafficevents.Hazard>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.trafficevents.Hazard, 2));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.trafficevents.Hazard>} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.setHazardList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficevents.Hazard=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.trafficevents.Hazard}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.addHazard = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sensoris.protobuf.categories.trafficevents.Hazard, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.clearHazardList = function() {
  return this.setHazardList([]);
};


/**
 * repeated DangerousSlowDown dangerous_slow_down = 3;
 * @return {!Array<!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown>}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.getDangerousSlowDownList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown, 3));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown>} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.setDangerousSlowDownList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.addDangerousSlowDown = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sensoris.protobuf.categories.trafficevents.DangerousSlowDown, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.clearDangerousSlowDownList = function() {
  return this.setDangerousSlowDownList([]);
};


/**
 * repeated TrafficCondition traffic_condition = 4;
 * @return {!Array<!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition>}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.getTrafficConditionList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.trafficevents.TrafficCondition, 4));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition>} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.setTrafficConditionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficCondition}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.addTrafficCondition = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.sensoris.protobuf.categories.trafficevents.TrafficCondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.clearTrafficConditionList = function() {
  return this.setTrafficConditionList([]);
};


/**
 * repeated RoadWorks roadworks = 5;
 * @return {!Array<!proto.sensoris.protobuf.categories.trafficevents.RoadWorks>}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.getRoadworksList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.trafficevents.RoadWorks>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.trafficevents.RoadWorks, 5));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.trafficevents.RoadWorks>} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.setRoadworksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWorks}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.addRoadworks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sensoris.protobuf.categories.trafficevents.RoadWorks, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.clearRoadworksList = function() {
  return this.setRoadworksList([]);
};


/**
 * repeated RoadWeatherCondition road_weather_condition = 6;
 * @return {!Array<!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition>}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.getRoadWeatherConditionList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition, 6));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition>} value
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
*/
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.setRoadWeatherConditionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition}
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.addRoadWeatherCondition = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.sensoris.protobuf.categories.trafficevents.RoadWeatherCondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory} returns this
 */
proto.sensoris.protobuf.categories.trafficevents.TrafficEventsCategory.prototype.clearRoadWeatherConditionList = function() {
  return this.setRoadWeatherConditionList([]);
};


goog.object.extend(exports, proto.sensoris.protobuf.categories.trafficevents);
