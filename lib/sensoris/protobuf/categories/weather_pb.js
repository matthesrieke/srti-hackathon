// source: sensoris/protobuf/categories/weather.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var sensoris_protobuf_types_base_pb = require('../../../sensoris/protobuf/types/base_pb.js');
goog.object.extend(proto, sensoris_protobuf_types_base_pb);
goog.exportSymbol('proto.sensoris.protobuf.categories.weather.Precipitation', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.weather.Precipitation.IntensityCase', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.weather.WeatherCategory', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.weather.Precipitation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sensoris.protobuf.categories.weather.Precipitation.oneofGroups_);
};
goog.inherits(proto.sensoris.protobuf.categories.weather.Precipitation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.weather.Precipitation.displayName = 'proto.sensoris.protobuf.categories.weather.Precipitation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensoris.protobuf.categories.weather.WeatherCategory.repeatedFields_, null);
};
goog.inherits(proto.sensoris.protobuf.categories.weather.WeatherCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.weather.WeatherCategory.displayName = 'proto.sensoris.protobuf.categories.weather.WeatherCategory';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sensoris.protobuf.categories.weather.Precipitation.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.IntensityCase = {
  INTENSITY_NOT_SET: 0,
  RELATIVE_INTENSITY_AND_ACCURACY: 4,
  ABSOLUTE_INTENSITY_AND_ACCURACY: 5
};

/**
 * @return {proto.sensoris.protobuf.categories.weather.Precipitation.IntensityCase}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.getIntensityCase = function() {
  return /** @type {proto.sensoris.protobuf.categories.weather.Precipitation.IntensityCase} */(jspb.Message.computeOneofCase(this, proto.sensoris.protobuf.categories.weather.Precipitation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.weather.Precipitation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.weather.Precipitation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.weather.Precipitation.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.toObject(includeInstance, f),
    relativeIntensityAndAccuracy: (f = msg.getRelativeIntensityAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f),
    absoluteIntensityAndAccuracy: (f = msg.getAbsoluteIntensityAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.weather.Precipitation;
  return proto.sensoris.protobuf.categories.weather.Precipitation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.weather.Precipitation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    case 4:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setRelativeIntensityAndAccuracy(value);
      break;
    case 5:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setAbsoluteIntensityAndAccuracy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.weather.Precipitation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.weather.Precipitation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.weather.Precipitation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getRelativeIntensityAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getAbsoluteIntensityAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  NONE: 1,
  RAIN: 2,
  MIXED_RAIN_SNOW: 3,
  SNOW: 4,
  HAIL: 5
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation} returns this
*/
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation} returns this
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 2;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation} returns this
*/
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation} returns this
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 3;
 * @return {?proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence, 3));
};


/**
 * @param {?proto.sensoris.protobuf.categories.weather.Precipitation.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation} returns this
*/
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation} returns this
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_intensity_and_accuracy = 4;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.getRelativeIntensityAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 4));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation} returns this
*/
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.setRelativeIntensityAndAccuracy = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.sensoris.protobuf.categories.weather.Precipitation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation} returns this
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.clearRelativeIntensityAndAccuracy = function() {
  return this.setRelativeIntensityAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.hasRelativeIntensityAndAccuracy = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy absolute_intensity_and_accuracy = 5;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.getAbsoluteIntensityAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 5));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation} returns this
*/
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.setAbsoluteIntensityAndAccuracy = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.sensoris.protobuf.categories.weather.Precipitation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation} returns this
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.clearAbsoluteIntensityAndAccuracy = function() {
  return this.setAbsoluteIntensityAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.weather.Precipitation.prototype.hasAbsoluteIntensityAndAccuracy = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.weather.WeatherCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.weather.WeatherCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.CategoryEnvelope.toObject(includeInstance, f),
    precipitationList: jspb.Message.toObjectList(msg.getPrecipitationList(),
    proto.sensoris.protobuf.categories.weather.Precipitation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.weather.WeatherCategory}
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.weather.WeatherCategory;
  return proto.sensoris.protobuf.categories.weather.WeatherCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.weather.WeatherCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.weather.WeatherCategory}
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.CategoryEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.CategoryEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new proto.sensoris.protobuf.categories.weather.Precipitation;
      reader.readMessage(value,proto.sensoris.protobuf.categories.weather.Precipitation.deserializeBinaryFromReader);
      msg.addPrecipitation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.weather.WeatherCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.weather.WeatherCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.CategoryEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getPrecipitationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sensoris.protobuf.categories.weather.Precipitation.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.CategoryEnvelope}
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.CategoryEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.CategoryEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.CategoryEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.weather.WeatherCategory} returns this
*/
proto.sensoris.protobuf.categories.weather.WeatherCategory.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.weather.WeatherCategory} returns this
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Precipitation precipitation = 2;
 * @return {!Array<!proto.sensoris.protobuf.categories.weather.Precipitation>}
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.prototype.getPrecipitationList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.weather.Precipitation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.weather.Precipitation, 2));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.weather.Precipitation>} value
 * @return {!proto.sensoris.protobuf.categories.weather.WeatherCategory} returns this
*/
proto.sensoris.protobuf.categories.weather.WeatherCategory.prototype.setPrecipitationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.weather.Precipitation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.weather.Precipitation}
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.prototype.addPrecipitation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sensoris.protobuf.categories.weather.Precipitation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.weather.WeatherCategory} returns this
 */
proto.sensoris.protobuf.categories.weather.WeatherCategory.prototype.clearPrecipitationList = function() {
  return this.setPrecipitationList([]);
};


goog.object.extend(exports, proto.sensoris.protobuf.categories.weather);
