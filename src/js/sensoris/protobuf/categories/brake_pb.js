// source: sensoris/protobuf/categories/brake.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var sensoris_protobuf_types_base_pb = require('../../../sensoris/protobuf/types/base_pb.js');
goog.object.extend(proto, sensoris_protobuf_types_base_pb);
goog.exportSymbol('proto.sensoris.protobuf.categories.brake.BrakeCategory', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.displayName = 'proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensoris.protobuf.categories.brake.BrakeCategory.repeatedFields_, null);
};
goog.inherits(proto.sensoris.protobuf.categories.brake.BrakeCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.brake.BrakeCategory.displayName = 'proto.sensoris.protobuf.categories.brake.BrakeCategory';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    absStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    escStatus: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tcsStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    ebdStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ebaStatus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus;
  return proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = /** @type {!proto.sensoris.protobuf.types.base.SystemStatus} */ (reader.readEnum());
      msg.setAbsStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.sensoris.protobuf.types.base.SystemStatus} */ (reader.readEnum());
      msg.setEscStatus(value);
      break;
    case 4:
      var value = /** @type {!proto.sensoris.protobuf.types.base.SystemStatus} */ (reader.readEnum());
      msg.setTcsStatus(value);
      break;
    case 5:
      var value = /** @type {!proto.sensoris.protobuf.types.base.SystemStatus} */ (reader.readEnum());
      msg.setEbdStatus(value);
      break;
    case 6:
      var value = /** @type {!proto.sensoris.protobuf.types.base.SystemStatus} */ (reader.readEnum());
      msg.setEbaStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getAbsStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getEscStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getTcsStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getEbdStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getEbaStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus} returns this
*/
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus} returns this
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.SystemStatus abs_status = 2;
 * @return {!proto.sensoris.protobuf.types.base.SystemStatus}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.getAbsStatus = function() {
  return /** @type {!proto.sensoris.protobuf.types.base.SystemStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.sensoris.protobuf.types.base.SystemStatus} value
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus} returns this
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.setAbsStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional sensoris.protobuf.types.base.SystemStatus esc_status = 3;
 * @return {!proto.sensoris.protobuf.types.base.SystemStatus}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.getEscStatus = function() {
  return /** @type {!proto.sensoris.protobuf.types.base.SystemStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.sensoris.protobuf.types.base.SystemStatus} value
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus} returns this
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.setEscStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional sensoris.protobuf.types.base.SystemStatus tcs_status = 4;
 * @return {!proto.sensoris.protobuf.types.base.SystemStatus}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.getTcsStatus = function() {
  return /** @type {!proto.sensoris.protobuf.types.base.SystemStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.sensoris.protobuf.types.base.SystemStatus} value
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus} returns this
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.setTcsStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional sensoris.protobuf.types.base.SystemStatus ebd_status = 5;
 * @return {!proto.sensoris.protobuf.types.base.SystemStatus}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.getEbdStatus = function() {
  return /** @type {!proto.sensoris.protobuf.types.base.SystemStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.sensoris.protobuf.types.base.SystemStatus} value
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus} returns this
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.setEbdStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional sensoris.protobuf.types.base.SystemStatus eba_status = 6;
 * @return {!proto.sensoris.protobuf.types.base.SystemStatus}
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.getEbaStatus = function() {
  return /** @type {!proto.sensoris.protobuf.types.base.SystemStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.sensoris.protobuf.types.base.SystemStatus} value
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus} returns this
 */
proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.prototype.setEbaStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.brake.BrakeCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.brake.BrakeCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.CategoryEnvelope.toObject(includeInstance, f),
    brakeSystemsStatusList: jspb.Message.toObjectList(msg.getBrakeSystemsStatusList(),
    proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeCategory}
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.brake.BrakeCategory;
  return proto.sensoris.protobuf.categories.brake.BrakeCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.brake.BrakeCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeCategory}
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.CategoryEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.CategoryEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus;
      reader.readMessage(value,proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.deserializeBinaryFromReader);
      msg.addBrakeSystemsStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.brake.BrakeCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.brake.BrakeCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.CategoryEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getBrakeSystemsStatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.CategoryEnvelope}
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.CategoryEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.CategoryEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.CategoryEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeCategory} returns this
*/
proto.sensoris.protobuf.categories.brake.BrakeCategory.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeCategory} returns this
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated BrakeSystemsStatus brake_systems_status = 2;
 * @return {!Array<!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus>}
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.prototype.getBrakeSystemsStatusList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus, 2));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus>} value
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeCategory} returns this
*/
proto.sensoris.protobuf.categories.brake.BrakeCategory.prototype.setBrakeSystemsStatusList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus}
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.prototype.addBrakeSystemsStatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sensoris.protobuf.categories.brake.BrakeSystemsStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.brake.BrakeCategory} returns this
 */
proto.sensoris.protobuf.categories.brake.BrakeCategory.prototype.clearBrakeSystemsStatusList = function() {
  return this.setBrakeSystemsStatusList([]);
};


goog.object.extend(exports, proto.sensoris.protobuf.categories.brake);
