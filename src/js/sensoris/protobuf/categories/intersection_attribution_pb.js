// source: sensoris/protobuf/categories/intersection_attribution.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var sensoris_protobuf_types_base_pb = require('../../../sensoris/protobuf/types/base_pb.js');
goog.object.extend(proto, sensoris_protobuf_types_base_pb);
var sensoris_protobuf_types_spatial_pb = require('../../../sensoris/protobuf/types/spatial_pb.js');
goog.object.extend(proto, sensoris_protobuf_types_spatial_pb);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.Type', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.displayName = 'proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.displayName = 'proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.displayName = 'proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.displayName = 'proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.displayName = 'proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.repeatedFields_, null);
};
goog.inherits(proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.displayName = 'proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    existenceConfidence: (f = msg.getExistenceConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f),
    positionAndAccuracy: (f = msg.getPositionAndAccuracy()) && sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.toObject(includeInstance, f),
    statusAndConfidence: (f = msg.getStatusAndConfidence()) && proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.toObject(includeInstance, f),
    colorAndConfidence: (f = msg.getColorAndConfidence()) && proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.toObject(includeInstance, f),
    shapeAndConfidence: (f = msg.getShapeAndConfidence()) && proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb;
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setExistenceConfidence(value);
      break;
    case 3:
      var value = new sensoris_protobuf_types_spatial_pb.PositionAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.deserializeBinaryFromReader);
      msg.setPositionAndAccuracy(value);
      break;
    case 4:
      var value = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.deserializeBinaryFromReader);
      msg.setStatusAndConfidence(value);
      break;
    case 5:
      var value = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.deserializeBinaryFromReader);
      msg.setColorAndConfidence(value);
      break;
    case 6:
      var value = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.deserializeBinaryFromReader);
      msg.setShapeAndConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getExistenceConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
  f = message.getPositionAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getStatusAndConfidence();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getColorAndConfidence();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getShapeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence;
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  OFF: 1,
  ON: 2,
  BLINKING: 3
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence;
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  GREEN: 1,
  YELLOW: 2,
  RED: 3
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence;
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  CIRCLE: 1,
  ARROW_STRAIGHT: 2,
  ARROW_LEFT: 3,
  ARROW_RIGHT: 4,
  ARROW_STRAIGHT_AND_LEFT: 5,
  ARROW_STRAIGHT_AND_RIGHT: 6
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.Confidence existence_confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.getExistenceConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.setExistenceConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.clearExistenceConfidence = function() {
  return this.setExistenceConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.hasExistenceConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 3;
 * @return {?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.getPositionAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_spatial_pb.PositionAndAccuracy, 3));
};


/**
 * @param {?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.setPositionAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.clearPositionAndAccuracy = function() {
  return this.setPositionAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.hasPositionAndAccuracy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StatusAndConfidence status_and_confidence = 4;
 * @return {?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.getStatusAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence, 4));
};


/**
 * @param {?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.StatusAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.setStatusAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.clearStatusAndConfidence = function() {
  return this.setStatusAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.hasStatusAndConfidence = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ColorAndConfidence color_and_confidence = 5;
 * @return {?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.getColorAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence, 5));
};


/**
 * @param {?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ColorAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.setColorAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.clearColorAndConfidence = function() {
  return this.setColorAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.hasColorAndConfidence = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ShapeAndConfidence shape_and_confidence = 6;
 * @return {?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.getShapeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence, 6));
};


/**
 * @param {?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.ShapeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.setShapeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.clearShapeAndConfidence = function() {
  return this.setShapeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.prototype.hasShapeAndConfidence = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    existenceConfidence: (f = msg.getExistenceConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    rectangularBoxAndAccuracy: (f = msg.getRectangularBoxAndAccuracy()) && sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy.toObject(includeInstance, f),
    bulbCountAndConfidence: (f = msg.getBulbCountAndConfidence()) && sensoris_protobuf_types_base_pb.CountAndConfidence.toObject(includeInstance, f),
    orientationAndConfidence: (f = msg.getOrientationAndConfidence()) && proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal;
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setExistenceConfidence(value);
      break;
    case 3:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 4:
      var value = new sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy.deserializeBinaryFromReader);
      msg.setRectangularBoxAndAccuracy(value);
      break;
    case 5:
      var value = new sensoris_protobuf_types_base_pb.CountAndConfidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.CountAndConfidence.deserializeBinaryFromReader);
      msg.setBulbCountAndConfidence(value);
      break;
    case 6:
      var value = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.deserializeBinaryFromReader);
      msg.setOrientationAndConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getExistenceConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getRectangularBoxAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getBulbCountAndConfidence();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      sensoris_protobuf_types_base_pb.CountAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getOrientationAndConfidence();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence;
  return proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  OTHER: 1,
  HORIZONTAL: 2,
  VERTICAL: 3,
  MIXED: 4
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.Confidence existence_confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.getExistenceConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.setExistenceConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.clearExistenceConfidence = function() {
  return this.setExistenceConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.hasExistenceConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 3));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 4;
 * @return {?proto.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.getRectangularBoxAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy, 4));
};


/**
 * @param {?proto.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.setRectangularBoxAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.clearRectangularBoxAndAccuracy = function() {
  return this.setRectangularBoxAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.hasRectangularBoxAndAccuracy = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional sensoris.protobuf.types.base.CountAndConfidence bulb_count_and_confidence = 5;
 * @return {?proto.sensoris.protobuf.types.base.CountAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.getBulbCountAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.CountAndConfidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.CountAndConfidence, 5));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.CountAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.setBulbCountAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.clearBulbCountAndConfidence = function() {
  return this.setBulbCountAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.hasBulbCountAndConfidence = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional OrientationAndConfidence orientation_and_confidence = 6;
 * @return {?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.getOrientationAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence, 6));
};


/**
 * @param {?proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.OrientationAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.setOrientationAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.clearOrientationAndConfidence = function() {
  return this.setOrientationAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.prototype.hasOrientationAndConfidence = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.CategoryEnvelope.toObject(includeInstance, f),
    trafficSignalBulbList: jspb.Message.toObjectList(msg.getTrafficSignalBulbList(),
    proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.toObject, includeInstance),
    trafficSignalList: jspb.Message.toObjectList(msg.getTrafficSignalList(),
    proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory}
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory;
  return proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory}
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.CategoryEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.CategoryEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb;
      reader.readMessage(value,proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.deserializeBinaryFromReader);
      msg.addTrafficSignalBulb(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal;
      reader.readMessage(value,proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.deserializeBinaryFromReader);
      msg.addTrafficSignal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.CategoryEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getTrafficSignalBulbList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb.serializeBinaryToWriter
    );
  }
  f = message.getTrafficSignalList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.CategoryEnvelope}
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.CategoryEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.CategoryEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.CategoryEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TrafficSignalBulb traffic_signal_bulb = 2;
 * @return {!Array<!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb>}
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.getTrafficSignalBulbList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb, 2));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb>} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.setTrafficSignalBulbList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb}
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.addTrafficSignalBulb = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignalBulb, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.clearTrafficSignalBulbList = function() {
  return this.setTrafficSignalBulbList([]);
};


/**
 * repeated TrafficSignal traffic_signal = 3;
 * @return {!Array<!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal>}
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.getTrafficSignalList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal, 3));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal>} value
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.setTrafficSignalList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal}
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.addTrafficSignal = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sensoris.protobuf.categories.intersectionattribution.TrafficSignal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory.prototype.clearTrafficSignalList = function() {
  return this.setTrafficSignalList([]);
};


goog.object.extend(exports, proto.sensoris.protobuf.categories.intersectionattribution);
