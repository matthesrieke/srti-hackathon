// source: sensoris/protobuf/categories/traffic_regulation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var sensoris_protobuf_types_base_pb = require('../../../sensoris/protobuf/types/base_pb.js');
goog.object.extend(proto, sensoris_protobuf_types_base_pb);
var sensoris_protobuf_types_spatial_pb = require('../../../sensoris/protobuf/types/spatial_pb.js');
goog.object.extend(proto, sensoris_protobuf_types_spatial_pb);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.repeatedFields_, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficregulation.TrafficSign, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.displayName = 'proto.sensoris.protobuf.categories.trafficregulation.TrafficSign';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.repeatedFields_, null);
};
goog.inherits(proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.displayName = 'proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    existenceConfidence: (f = msg.getExistenceConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    rectangularBoxAndAccuracy: (f = msg.getRectangularBoxAndAccuracy()) && sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy.toObject(includeInstance, f),
    shapeAndConfidence: (f = msg.getShapeAndConfidence()) && proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.toObject(includeInstance, f),
    valueAndConfidence: (f = msg.getValueAndConfidence()) && proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.toObject(includeInstance, f),
    permanencyAndConfidence: (f = msg.getPermanencyAndConfidence()) && proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.toObject(includeInstance, f),
    validationAndConfidence: (f = msg.getValidationAndConfidence()) && proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.toObject(includeInstance, f),
    backgroundColorAndConfidence: (f = msg.getBackgroundColorAndConfidence()) && proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.toObject(includeInstance, f),
    supplementarySignAndConfidenceList: jspb.Message.toObjectList(msg.getSupplementarySignAndConfidenceList(),
    proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign;
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setExistenceConfidence(value);
      break;
    case 3:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 4:
      var value = new sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy.deserializeBinaryFromReader);
      msg.setRectangularBoxAndAccuracy(value);
      break;
    case 5:
      var value = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.deserializeBinaryFromReader);
      msg.setShapeAndConfidence(value);
      break;
    case 6:
      var value = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    case 7:
      var value = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.deserializeBinaryFromReader);
      msg.setValueAndConfidence(value);
      break;
    case 8:
      var value = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.deserializeBinaryFromReader);
      msg.setPermanencyAndConfidence(value);
      break;
    case 9:
      var value = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.deserializeBinaryFromReader);
      msg.setValidationAndConfidence(value);
      break;
    case 10:
      var value = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.deserializeBinaryFromReader);
      msg.setBackgroundColorAndConfidence(value);
      break;
    case 11:
      var value = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.deserializeBinaryFromReader);
      msg.addSupplementarySignAndConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getExistenceConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getRectangularBoxAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getShapeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getValueAndConfidence();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getPermanencyAndConfidence();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getValidationAndConfidence();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getBackgroundColorAndConfidence();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getSupplementarySignAndConfidenceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence;
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  OTHER: 1,
  RECTANGLE: 2,
  SQUARE: 3,
  TRIANGLE_UP: 4,
  TRIANGLE_DOWN: 5,
  DIAMOND: 6,
  HEXAGON: 7,
  ROUND: 8,
  CROSS_BUCK: 9,
  OCTAGON: 10,
  ELLIPSE: 11,
  PENTAGON: 12
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f),
    otherText: (f = msg.getOtherText()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setOtherText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
  f = message.getOtherText();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  OTHER_AS_TEXT: 1,
  SPEED_LIMIT: 2,
  SPEED_LIMIT_END: 3,
  SPEED_LIMIT_CHANGE_UPCOMING: 4,
  ADVISORY_SPEED_LIMIT: 5,
  ADVISORY_SPEED_LIMIT_END: 6,
  NO_OVERTAKING: 7,
  NO_OVERTAKING_END: 8,
  PROTECTED_PASSING_START: 9,
  PROTECTED_PASSING_END: 10,
  PROTECTED_PASSING_LEFT_START: 11,
  PROTECTED_PASSING_RIGHT_START: 12,
  PROTECTED_PASSING_LEFT_END: 13,
  PROTECTED_PASSING_RIGHT_END: 14,
  NO_OVERTAKING_TRUCK: 15,
  NO_OVERTAKING_TRUCK_END: 16,
  ALL_RESTRICTIONS_END: 17,
  CITY_START: 18,
  CITY_END: 19,
  HIGHWAY: 20,
  HIGHWAY_END: 21,
  MOTORWAY: 22,
  MOTORWAY_END: 23,
  CONSTRUCTION: 24,
  CONSTRUCTION_END: 25,
  LANE_MERGE: 26,
  LANE_MERGE_ON_RIGHT: 27,
  LANE_MERGE_ON_LEFT: 28,
  LANE_MERGE_CENTER: 29,
  RAILWAY_CROSSING_GENERAL: 30,
  RAILWAY_CROSSING_PROTECTED: 31,
  RAILWAY_CROSSING_UNPROTECTED: 32,
  ROAD_NARROWS: 33,
  ROAD_NARROWS_LEFT: 34,
  ROAD_NARROWS_RIGHT: 35,
  ROAD_NARROWS_CENTER: 36,
  SHARP_CURVE: 37,
  SHARP_CURVE_LEFT: 38,
  SHARP_CURVE_RIGHT: 39,
  WINDING_ROAD: 40,
  WINDING_ROAD_STARTING_LEFT: 41,
  WINDING_ROAD_STARTING_RIGHT: 42,
  STEEP_HILL: 43,
  STEEP_HILL_UPWARDS: 44,
  STEEP_HILL_DOWNWARDS: 45,
  STOP_SIGN: 46,
  LATERAL_WIND: 47,
  LATERAL_WIND_FROM_RIGHT: 48,
  LATERAL_WIND_FROM_LEFT: 49,
  GENERAL_WARNING: 50,
  RISK_OF_GROUNDING: 51,
  ANIMAL: 52,
  ICY_CONDITIONS: 53,
  SLIPPERY_ROAD: 54,
  UNEVEN_ROAD: 55,
  SCHOOL_ZONE: 56,
  TRAMWAY_CROSSING: 57,
  CONGESTION_HAZARD: 58,
  ACCIDENT_HAZARD: 59,
  BICYCLE_CROSSING: 60,
  PRIORITY_OVER_ONCOMING_TRAFFIC: 61,
  YIELD: 62,
  PRIORITY_ROAD: 63,
  PRIORITY_ROAD_END: 64,
  TRAFFIC_CALMING: 65,
  TRAFFIC_CALMING_END: 66,
  ENVIRONMENTAL_AREA: 67,
  ENVIRONMENTAL_AREA_END: 68,
  INTERSECTION: 69,
  ROUNDABOUT: 70,
  PASSING_ON_LEFT: 71,
  PASSING_ON_RIGHT: 72,
  PASSING_ON_LEFT_OR_RIGHT: 73,
  MANDATORY_TURN_RIGHT_ONLY: 74,
  MANDATORY_TURN_LEFT_ONLY: 75,
  MANDATORY_STRAIGHT_ONLY: 76,
  MANDATORY_TURN_LEFT_OR_RIGHT: 77,
  MANDATORY_TURN_RESTRICTION: 78,
  MANDATORY_STRAIGHT_OR_LEFT: 79,
  MANDATORY_STRAIGHT_OR_RIGHT: 80,
  NO_LEFT_TURN: 81,
  NO_RIGHT_TURN: 82,
  NO_U_TURN: 83,
  NO_U_OR_LEFT_TURN: 84,
  U_TURN_ALLOWED: 85,
  MANDATORY_LEFT_TRUCK: 86,
  MANDATORY_RIGHT_TRUCK: 87,
  MANDATORY_STRAIGHT_TRUCK: 88,
  NO_ENTRY: 89,
  DEAD_END: 90,
  HIGH_OCCUPANCY_VEHICLE_LANE: 91,
  TOLL: 92,
  TOLL_CAR: 93,
  TOLL_LANE: 94,
  EXPRESS_LANE: 95,
  SHOULDER_OPEN_FOR_TRAFFIC: 96,
  SHOULDER_CLOSED_FOR_TRAFFIC: 97,
  LANE_CLOSED: 98,
  LANE_CLOSED_RIGHT_MOST_LANE: 99,
  LANE_CLOSED_LEFT_MOST_LANE: 100,
  WARNING_PEDESTRIAN: 101,
  WARNING_CHILDREN: 102,
  WARNING_BICYCLE: 103,
  WARNING_BUS: 104,
  PUBLIC_TRANSPORTATION_STOP: 105,
  PEDESTRIAN_CROSSING: 106,
  WEIGHT_RESTRICTION: 107,
  HEIGHT_RESTRICTION: 108,
  LENGTH_RESTRICTION: 109,
  WIDTH_RESTRICTION: 110,
  WARNING_TRUCK_ROLLOVER: 111,
  SIGNAL_AHEAD: 112,
  SKI_CROSSING: 113,
  NO_AGRICULTUR_VEHICLE: 114,
  NO_BICYCLE: 115,
  NO_BUS: 116,
  NO_HAUL_EXPLOSIVES: 117,
  NO_HAUL_HARMFUL_TO_WATER: 118,
  NO_HAUL_HAZARDOUS_MATERIAL: 119,
  NO_MOTORCYCLE: 120,
  NO_TRAILER: 121,
  NO_TRUCK_WITH_TRAILER: 122,
  PARK_AND_RIDE: 123,
  ROAD_DISTANCE: 124,
  EMERGENCY_PHONE: 125,
  SPEED_LIMIT_ENFORCEMENT: 126,
  TRAFFIC_LIGHT_ENFORCEMENT: 127,
  BOARD_DIRECTION: 128,
  STREET_NAME: 129,
  TRUCK_SPEED_LIMIT: 130,
  TRUCK_SPEED_LIMIT_END: 131,
  SPEED_LIMIT_NIGHT: 132,
  SPEED_LIMIT_NIGHT_END: 133,
  MINIMUM_SPEED: 134,
  MINIMUM_SPEED_END: 135,
  PEDESTRIAN_ZONE: 136,
  PEDESTRIAN_ZONE_END: 137,
  PEDESTRIAN_PATH: 138,
  PEDESTRIAN_PATH_END: 139,
  PEDESTRIAN_BICYCLE_PATH: 140,
  PEDESTRIAN_BICYCLE_PATH_END: 141,
  BICYCLE_PATH: 142,
  BICYCLE_PATH_END: 143,
  BICYCLE_STREET: 144,
  BICYCLE_STREET_END: 145,
  CURVE_LEFT_THEN_RIGHT: 146,
  CURVE_RIGHT_THEN_LEFT: 147,
  CURVE_TRIPLE_HAIRPIN: 148,
  STEEP_DROP: 149,
  STEEP_DROP_ON_LEFT: 150,
  STEEP_DROP_ON_RIGHT: 151,
  NO_ANIMAL_CATTLE: 152,
  ANIMAL_DEER: 153,
  ANIMAL_MOOSE: 154,
  NO_HORSE_RIDING: 155,
  FALLING_ROCKS: 156,
  FALLING_ROCKS_LEFT: 157,
  FALLING_ROCKS_RIGHT: 158,
  YIELD_TO_ONCOMING_TRAFFIC: 159,
  UNPROTECTED_LEFT_TURN: 160,
  ONEWAY_TRAFFIC: 161,
  ONEWAY_TRAFFIC_TO_LEFT: 162,
  ONEWAY_TRAFFIC_TO_RIGHT: 163,
  ONEWAY_TRAFFIC_TO_STRAIGHT: 164,
  NO_VEHICLE: 165,
  NO_MOTOR_VEHICLE: 166,
  NO_TRUCK: 167,
  NO_PEDESTRIAN: 168,
  LANE_USED_IN_BOTH_DIRECTIONS: 169,
  FOG_AREA: 170,
  TIRE_CHAINS_MANDATORY: 171,
  HIJACKING_HOTSPOT: 172,
  OVERPASS_AHEAD: 173,
  TUNNEL: 174,
  FERRY_TERMINAL: 175,
  NARROW_BRIDGE: 176,
  NO_IDLING: 177,
  HUMPBACK_BRIDGE: 178,
  EMBANKMENT: 179,
  EMBANKMENT_ON_THE_LEFT: 180,
  EMBANKMENT_ON_THE_RIGHT: 181,
  CROSSING_WITH_PRIORITY_OVER_MINOR_ROAD: 182,
  CROSSING_WITH_PRIORITY_TO_THE_RIGHT: 183,
  BRANCH_TO_THE_LEFT: 184,
  BRANCH_TO_THE_RIGHT: 185,
  TWO_WAY_TRAFFIC: 186,
  BUMP: 187,
  DIP: 188,
  ROAD_FLOODED: 189,
  AUDIBLE_WARNING: 190,
  VILLAGE_AHEAD: 191,
  MOVABLE_BRIDGE: 192,
  SLOW_DOWN: 193,
  INTERSECTION_T: 194,
  INTERSECTION_T_LEFT: 195,
  INTERSECTION_T_RIGHT: 196,
  INTERSECTION_T_LEFT_RIGHT: 197,
  INTERSECTION_Y: 198,
  USE_LOW_GEAR: 199,
  USE_LOW_GEAR_END: 200,
  NO_COMPRESSION_BRAKING: 201,
  NO_COMPRESSION_BRAKING_END: 202,
  WAITING_LINE: 203,
  DONT_STOP_ZONE: 204,
  HONKING_PROHIBITED: 205,
  FASTEN_SEAT_BELT: 206,
  HAMLET_ENTRY: 207,
  HAMLET_EXIT: 208,
  HIGHWAY_MARKER_1_STRIPE: 209,
  HIGHWAY_MARKER_2_STRIPES: 210,
  HIGHWAY_MARKER_3_STRIPES: 211,
  GUIDING_BEACON: 212,
  COUNTDOWN_MARKER_1_STRIPE: 213,
  COUNTDOWN_MARKER_2_STRIPES: 214,
  COUNTDOWN_MARKER_3_STRIPES: 215,
  DIVERSION_ROUTE: 216,
  DIVERSION_ROUTE_END: 217,
  NO_STOPPING_EXCEPT_TAXI: 218,
  NO_STOPPING: 219,
  NO_STOPPING_LEFT: 220,
  NO_STOPPING_RIGHT: 221,
  NO_STOPPING_LEFT_AND_RIGHT: 222,
  NO_PARKING: 223,
  NO_PARKING_LEFT: 224,
  NO_PARKING_RIGHT: 225,
  NO_PARKING_LEFT_AND_RIGHT: 226,
  RUNNAWAY_TRUCK_RAMP: 227,
  TURN_ON_GREEN: 228,
  NO_TURN_ON_RED: 229,
  MOTORWAY_ROAD_NUMBER: 230,
  HIGHWAY_ROAD_NUMBER: 231,
  HIGHWAY_INTERCHANGE_NUMBER: 232,
  EUROPEAN_ROAD_NUMBER: 233,
  SPEED_LIMIT_ZONE: 234,
  SPEED_LIMIT_ZONE_END: 235,
  NO_PARKING_ZONE: 236,
  NO_PARKING_ZONE_END: 237,
  PARKING_ZONE: 238,
  PARKING_ZONE_END: 239,
  PARKING: 240,
  PARKING_TO_LEFT: 241,
  PARKING_TO_RIGHT: 242,
  PARKING_GARAGE: 243,
  PARKING_ON_SIDEWAY: 244,
  SAFETY_DISTANCE: 245,
  SAFETY_DISTANCE_VEHICLE: 246,
  SAFETY_DISTANCE_TRUCK: 247,
  DETOUR: 248,
  DETOUR_END: 249,
  DETOUR_LEFT: 250,
  DETOUR_RIGHT: 251,
  STATION_GAS: 252,
  STATION_LPG: 253,
  STATION_CNG: 254,
  STATION_H2: 255,
  STATION_ELECTRO: 256,
  STATION_POLICE: 257,
  CAMPING_SPOT: 258,
  RESTROOMS: 259,
  INFO_POINT: 260,
  MOTORWAY_EXIT_AHEAD: 261,
  HIGHWAY_EXIT_AHEAD: 262,
  MOTORWAY_EXIT: 263,
  HIGHWAY_EXIT: 264,
  FIRST_AID: 265,
  LOW_FLYING: 266,
  LANE_SHIFT: 267,
  LANE_SHIFT_TO_LEFT: 268,
  LANE_SHIFT_TO_RIGHT: 269,
  PEDESTRIAN_UNDERPASS: 270,
  PEDESTRIAN_OVERPASS: 271,
  BREAKDOWN_BAY: 272,
  BUS_LANE: 273,
  DOUBLE_HAIRPIN: 274,
  COUNTRY_SPECIFIC_INFORMATION: 275,
  PEDESTRIAN_BICYCLE_SHARED_PATH: 276,
  OVERHEAD_LANE_CONTROL_CLOSED: 277,
  OVERHEAD_LANE_CONTROL_OPEN: 278,
  OVERHEAD_LANE_CONTROL_CLOSING_LEFT: 279,
  OVERHEAD_LANE_CONTROL_CLOSING_RIGHT: 280,
  OVERHEAD_LANE_CONTROL_FLASH_ARROW_LEFT: 281,
  OVERHEAD_LANE_CONTROL_FLASH_ARROW_RIGHT: 282,
  TRINATURE: 283,
  ANIMAL_FROG: 284,
  GRAVEL: 285,
  WARNING_PEDESTRIAN_CROSSING: 286,
  LOW_TREE: 287,
  WARNING_RIDER: 288,
  STOP_AHEAD: 289,
  YIELD_AHEAD: 290,
  WATER_PROTECTION_AREA: 291,
  TOLL_DOUANE: 292,
  NO_CAR_OR_BIKE: 293,
  DRIVING_DIRECTION_ONLY_UP: 294,
  DRIVING_DIRECTION_UP_AND_DOWN: 295,
  MILITARY_SIGN: 296,
  SMOG: 297,
  ROUNDABOUT_AHEAD: 298,
  MANDATORY_LEFT_OR_STRAIGHT_OR_RIGHT: 299,
  DEAD_END_RIGHT: 300,
  DEAD_END_LEFT: 301,
  TOLL_TRUCK: 302,
  TOLL_TRUCK_END: 303,
  STAGGERED_JUNCTION: 304,
  AXLE_WEIGHT_RESTRICTION: 305,
  TOLL_END: 306,
  TOLL_CAR_END: 307,
  TOLL_LANE_END: 308
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue other_text = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.getOtherText = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.setOtherText = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.clearOtherText = function() {
  return this.setOtherText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence.prototype.hasOtherText = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence;
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.StringValue value = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence;
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  STATIC: 1,
  VARIABLE: 2,
  VARIABLE_ELECTRONICALLY: 3,
  VARIABLE_MECHANICALLY: 4,
  VARIABLE_DEACTIVATED: 5
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence;
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  VALID: 1,
  INVALID: 2
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence;
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  OTHER: 1,
  WHITE: 2,
  RED: 3,
  GREEN: 4,
  BLUE: 5,
  YELLOW: 6,
  BLACK: 7,
  BROWN: 8
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    existenceConfidence: (f = msg.getExistenceConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.toObject(includeInstance, f),
    valueAndConfidence: (f = msg.getValueAndConfidence()) && proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence;
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setExistenceConfidence(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    case 4:
      var value = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.deserializeBinaryFromReader);
      msg.setValueAndConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExistenceConfidence();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getValueAndConfidence();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f),
    otherText: (f = msg.getOtherText()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setOtherText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
  f = message.getOtherText();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  SUP_OTHER_AS_TEXT: 1,
  SUP_WET: 2,
  SUP_RAIN: 3,
  SUP_SNOW: 4,
  SUP_SNOW_OR_RAIN: 5,
  SUP_FOG: 6,
  SUP_TIME: 7,
  SUP_DAY_AND_TIME: 8,
  SUP_NIGHT: 9,
  SUP_SEASON: 10,
  SUP_WORKDAYS: 11,
  SUP_WORKDAYS_AND_TIME: 12,
  SUP_SCHOOL: 13,
  SUP_RAMP: 14,
  SUP_TRUCK: 15,
  SUP_TRUCK_WITH_TRAILER: 16,
  SUP_PASSENGER_CAR: 17,
  SUP_PASSENGER_CAR_WITH_TAILER: 18,
  SUP_TRACTOR_EXCEPT: 19,
  SUP_BUS: 20,
  SUP_TRUCKS_AND_BUS: 21,
  SUP_CARS_TRUCKS_BUS: 22,
  SUP_TAXI: 23,
  SUP_TANK: 24,
  SUP_ROADSIDE: 25,
  SUP_WEIGHT: 26,
  SUP_STARTING_IN: 27,
  SUP_VALID_FOR: 28,
  SUP_IN_RIGHT_DIRECTION: 29,
  SUP_IN_LEFT_DIRECTION: 30,
  SUP_ZONE: 31,
  SUP_ZONE_START: 32,
  SUP_ZONE_END: 33,
  SUP_BEGIN_OF_VALIDITY: 34,
  SUP_END_OF_VALIDITY: 35,
  SUP_FROG: 36,
  SUP_ALL_WAY: 37,
  SUP_BIKE: 38,
  SUP_BIKE_EXCEPT: 39,
  SUP_BUS_EXCEPT: 40,
  SUP_CAMPER: 41,
  SUP_CARAVAN: 42,
  SUP_CONSTRUCTION_GATEWAY: 43,
  SUP_CROSS_WAY: 44,
  SUP_DELIVERY_EXCEPT: 45,
  SUP_ELECTRONIC_CAR: 46,
  SUP_GATEWAY: 47,
  SUP_GIVE_WAY_LEFT: 48,
  SUP_GIVE_WAY_RIGHT: 49,
  SUP_GRAVEL: 50,
  SUP_HAZMAT: 51,
  SUP_HAZ_WATER: 52,
  SUP_KIDS: 53,
  SUP_LOCAL_EXCEP: 54,
  SUP_LOW_TREE: 55,
  SUP_MOTORCYCLE: 56,
  SUP_MOTORCYCLE_EXCEPT: 57,
  SUP_NEW_ROAD_BED: 58,
  SUP_NO_STOP_SHOULDER: 59,
  SUP_OIL_TRAIL: 60,
  SUP_PASSENGER_CAR_EXCEPT: 61,
  SUP_PASSENGER_CAR_WITH_TAILER_EXCEPT: 62,
  SUP_PEDESTRIAN: 63,
  SUP_PRIORITY_TURN_LEFT: 64,
  SUP_PRIORITY_TURN_RIGHT: 65,
  SUP_ROAD_DAMAGE: 66,
  SUP_RUTS: 67,
  SUP_TRACTOR: 68,
  SUP_TRACTOR_MAY_BE_OVERTAKEN: 69,
  SUP_TRAFFIC_JAM: 70,
  SUP_TRAIN: 71,
  SUP_TRAM: 72,
  SUP_TRUCK_EXCEPT: 73,
  SUP_TRUCK_WITH_TRAILER_EXCEPT: 74,
  SUP_GET_IN_PROPER_LANE: 75,
  SUP_ROADSIDE_TRUCK: 76,
  SUP_RAPPEL: 77,
  SUP_RADAR_ENFORCED: 78,
  SUP_STOP_IN_DISTANCE: 79
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue other_text = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.getOtherText = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.setOtherText = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.clearOtherText = function() {
  return this.setOtherText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence.prototype.hasOtherText = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional sensoris.protobuf.types.base.Confidence existence_confidence = 1;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.getExistenceConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.setExistenceConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.clearExistenceConfidence = function() {
  return this.setExistenceConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.hasExistenceConfidence = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 2;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 3;
 * @return {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence, 3));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ValueAndConfidence value_and_confidence = 4;
 * @return {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.getValueAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence, 4));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.setValueAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.clearValueAndConfidence = function() {
  return this.setValueAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence.prototype.hasValueAndConfidence = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.Confidence existence_confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getExistenceConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setExistenceConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearExistenceConfidence = function() {
  return this.setExistenceConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.hasExistenceConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 3));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 4;
 * @return {?proto.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getRectangularBoxAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy, 4));
};


/**
 * @param {?proto.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setRectangularBoxAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearRectangularBoxAndAccuracy = function() {
  return this.setRectangularBoxAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.hasRectangularBoxAndAccuracy = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ShapeAndConfidence shape_and_confidence = 5;
 * @return {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getShapeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence, 5));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ShapeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setShapeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearShapeAndConfidence = function() {
  return this.setShapeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.hasShapeAndConfidence = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 6;
 * @return {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence, 6));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ValueAndConfidence value_and_confidence = 7;
 * @return {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getValueAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence, 7));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValueAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setValueAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearValueAndConfidence = function() {
  return this.setValueAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.hasValueAndConfidence = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional PermanencyAndConfidence permanency_and_confidence = 8;
 * @return {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getPermanencyAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence, 8));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.PermanencyAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setPermanencyAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearPermanencyAndConfidence = function() {
  return this.setPermanencyAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.hasPermanencyAndConfidence = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ValidationAndConfidence validation_and_confidence = 9;
 * @return {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getValidationAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence, 9));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.ValidationAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setValidationAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearValidationAndConfidence = function() {
  return this.setValidationAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.hasValidationAndConfidence = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional DominantBackgroundColorAndConfidence background_color_and_confidence = 10;
 * @return {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getBackgroundColorAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence, 10));
};


/**
 * @param {?proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.DominantBackgroundColorAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setBackgroundColorAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearBackgroundColorAndConfidence = function() {
  return this.setBackgroundColorAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.hasBackgroundColorAndConfidence = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated SupplementarySignAndConfidence supplementary_sign_and_confidence = 11;
 * @return {!Array<!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence>}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.getSupplementarySignAndConfidenceList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence, 11));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence>} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.setSupplementarySignAndConfidenceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.addSupplementarySignAndConfidence = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.SupplementarySignAndConfidence, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.prototype.clearSupplementarySignAndConfidenceList = function() {
  return this.setSupplementarySignAndConfidenceList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.CategoryEnvelope.toObject(includeInstance, f),
    trafficSignList: jspb.Message.toObjectList(msg.getTrafficSignList(),
    proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory;
  return proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.CategoryEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.CategoryEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new proto.sensoris.protobuf.categories.trafficregulation.TrafficSign;
      reader.readMessage(value,proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.deserializeBinaryFromReader);
      msg.addTrafficSign(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.CategoryEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getTrafficSignList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sensoris.protobuf.categories.trafficregulation.TrafficSign.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.CategoryEnvelope}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.CategoryEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.CategoryEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.CategoryEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TrafficSign traffic_sign = 2;
 * @return {!Array<!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign>}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.prototype.getTrafficSignList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign, 2));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign>} value
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory} returns this
*/
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.prototype.setTrafficSignList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficSign}
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.prototype.addTrafficSign = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sensoris.protobuf.categories.trafficregulation.TrafficSign, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory} returns this
 */
proto.sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory.prototype.clearTrafficSignList = function() {
  return this.setTrafficSignList([]);
};


goog.object.extend(exports, proto.sensoris.protobuf.categories.trafficregulation);
