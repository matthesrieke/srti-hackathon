// source: sensoris/protobuf/categories/road_attribution.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var sensoris_protobuf_types_base_pb = require('../../../sensoris/protobuf/types/base_pb.js');
goog.object.extend(proto, sensoris_protobuf_types_base_pb);
var sensoris_protobuf_types_spatial_pb = require('../../../sensoris/protobuf/types/spatial_pb.js');
goog.object.extend(proto, sensoris_protobuf_types_spatial_pb);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.Lane', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundary', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.GeometryCase', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingsCase', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.PositionReference', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.Road', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.RoadAttribution', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence', null, global);
goog.exportSymbol('proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.Type', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.displayName = 'proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.displayName = 'proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.displayName = 'proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.displayName = 'proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.oneofGroups_);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.LaneBoundary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.displayName = 'proto.sensoris.protobuf.categories.roadattribution.LaneBoundary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.displayName = 'proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.repeatedFields_, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.displayName = 'proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.displayName = 'proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.displayName = 'proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.Lane = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.Lane, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.Lane.displayName = 'proto.sensoris.protobuf.categories.roadattribution.Lane';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.Road = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.Road, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.Road.displayName = 'proto.sensoris.protobuf.categories.roadattribution.Road';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.repeatedFields_, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.displayName = 'proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.repeatedFields_, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.displayName = 'proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.RoadAttribution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.displayName = 'proto.sensoris.protobuf.categories.roadattribution.RoadAttribution';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.displayName = 'proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.displayName = 'proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.repeatedFields_, null);
};
goog.inherits(proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.displayName = 'proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence;
  return proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  WHITE: 1,
  GRAY: 2,
  GRAY_LIGHT: 3,
  GRAY_DARK: 4,
  BLACK: 5,
  RED: 6,
  YELLOW: 7,
  GREEN: 8,
  CYAN: 9,
  BLUE: 10,
  ORANGE: 11,
  PINK: 12
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence;
  return proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  METAL: 1,
  CONCRETE: 2,
  STONE: 3,
  WOOD: 4,
  PLASTIC: 5,
  TRANSPARENT: 6,
  VIBRATION_MARKINGS: 7,
  PAINT: 8,
  ASPHALT: 9,
  GRAVEL: 10,
  COBBLESTONE: 11
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence;
  return proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  ASPHALT: 1,
  CONCRETE: 2,
  COMPOSITE_PAVEMENT: 3,
  RECYCLING: 4,
  GRAVEL: 5,
  COBBLESTONE: 6
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.toObject = function(includeInstance, msg) {
  var f, obj = {
    longitudinalInclinationAndAccuracy: (f = msg.getLongitudinalInclinationAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f),
    lateralInclinationAndAccuracy: (f = msg.getLateralInclinationAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f),
    horizontalCurvatureAndAccuracy: (f = msg.getHorizontalCurvatureAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature}
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature;
  return proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature}
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setLongitudinalInclinationAndAccuracy(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setLateralInclinationAndAccuracy(value);
      break;
    case 3:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setHorizontalCurvatureAndAccuracy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLongitudinalInclinationAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getLateralInclinationAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getHorizontalCurvatureAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy longitudinal_inclination_and_accuracy = 1;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.getLongitudinalInclinationAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.setLongitudinalInclinationAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.clearLongitudinalInclinationAndAccuracy = function() {
  return this.setLongitudinalInclinationAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.hasLongitudinalInclinationAndAccuracy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy lateral_inclination_and_accuracy = 2;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.getLateralInclinationAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.setLateralInclinationAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.clearLateralInclinationAndAccuracy = function() {
  return this.setLateralInclinationAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.hasLateralInclinationAndAccuracy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy horizontal_curvature_and_accuracy = 3;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.getHorizontalCurvatureAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 3));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.setHorizontalCurvatureAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.clearHorizontalCurvatureAndAccuracy = function() {
  return this.setHorizontalCurvatureAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.prototype.hasHorizontalCurvatureAndAccuracy = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.oneofGroups_ = [[9],[13,14]];

/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.GeometryCase = {
  GEOMETRY_NOT_SET: 0,
  POLYLINE_AND_ACCURACY: 9
};

/**
 * @return {proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.GeometryCase}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getGeometryCase = function() {
  return /** @type {proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.GeometryCase} */(jspb.Message.computeOneofCase(this, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingsCase = {
  MARKINGS_NOT_SET: 0,
  DASH_STATISTICS: 13,
  MARKING_OFFSETS: 14
};

/**
 * @return {proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingsCase}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getMarkingsCase = function() {
  return /** @type {proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingsCase} */(jspb.Message.computeOneofCase(this, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    laneBoundaryId: (f = msg.getLaneBoundaryId()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    existenceConfidence: (f = msg.getExistenceConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.toObject(includeInstance, f),
    materialAndConfidence: (f = msg.getMaterialAndConfidence()) && proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.toObject(includeInstance, f),
    colorAndConfidence: (f = msg.getColorAndConfidence()) && proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.toObject(includeInstance, f),
    positionReference: jspb.Message.getFieldWithDefault(msg, 8, 0),
    polylineAndAccuracy: (f = msg.getPolylineAndAccuracy()) && sensoris_protobuf_types_spatial_pb.PolylineAndAccuracy.toObject(includeInstance, f),
    widthAndAccuracy: (f = msg.getWidthAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f),
    heightAndAccuracy: (f = msg.getHeightAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f),
    distanceBetweenDoubleAndAccuracy: (f = msg.getDistanceBetweenDoubleAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f),
    dashStatistics: (f = msg.getDashStatistics()) && proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.toObject(includeInstance, f),
    markingOffsets: (f = msg.getMarkingOffsets()) && proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundary;
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setLaneBoundaryId(value);
      break;
    case 3:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setExistenceConfidence(value);
      break;
    case 4:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 5:
      var value = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    case 6:
      var value = new proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.deserializeBinaryFromReader);
      msg.setMaterialAndConfidence(value);
      break;
    case 7:
      var value = new proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.deserializeBinaryFromReader);
      msg.setColorAndConfidence(value);
      break;
    case 8:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.PositionReference} */ (reader.readEnum());
      msg.setPositionReference(value);
      break;
    case 9:
      var value = new sensoris_protobuf_types_spatial_pb.PolylineAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_spatial_pb.PolylineAndAccuracy.deserializeBinaryFromReader);
      msg.setPolylineAndAccuracy(value);
      break;
    case 10:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setWidthAndAccuracy(value);
      break;
    case 11:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setHeightAndAccuracy(value);
      break;
    case 12:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setDistanceBetweenDoubleAndAccuracy(value);
      break;
    case 13:
      var value = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.deserializeBinaryFromReader);
      msg.setDashStatistics(value);
      break;
    case 14:
      var value = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.deserializeBinaryFromReader);
      msg.setMarkingOffsets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getLaneBoundaryId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getExistenceConfidence();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getMaterialAndConfidence();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getColorAndConfidence();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getPositionReference();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getPolylineAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      sensoris_protobuf_types_spatial_pb.PolylineAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getWidthAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getHeightAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getDistanceBetweenDoubleAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getDashStatistics();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.serializeBinaryToWriter
    );
  }
  f = message.getMarkingOffsets();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.PositionReference = {
  UNKNOWN_POSITION_REFERENCE: 0,
  LEFT_MARKING_BOUNDARY: 1,
  CENTER_LINE: 2,
  RIGHT_MARKING_BOUNDARY: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  LINE: 1,
  LINE_SINGLE: 2,
  LINE_SINGLE_SOLID: 3,
  LINE_SINGLE_DASHED: 4,
  LINE_SINGLE_DASHED_SHORT: 5,
  LINE_SINGLE_DASHED_LONG: 6,
  LINE_DOUBLE: 7,
  LINE_DOUBLE_SOLID: 8,
  LINE_DOUBLE_DASHED: 9,
  LINE_DOUBLE_SOLID_DASHED: 10,
  LINE_DOUBLE_DASHED_SOLID: 11,
  SHADED_AREA_MARKING: 12,
  BLOCKS_DASHED: 13,
  CROSSING_ALERT: 14,
  CURB: 15,
  CURB_TRAVERSABLE: 16,
  CURB_NON_TRAVERSABLE: 17,
  PHYSICAL_DIVIDER: 18,
  WALL: 19,
  WALL_FLAT: 20,
  WALL_CURVED: 21,
  BARRIER: 22,
  BARRIER_JERSEY: 23,
  BARRIER_SOUND: 24,
  BARRIER_CABLE: 25,
  GUARDRAIL: 26,
  FENCE: 27,
  ROAD_EDGE: 28,
  CLIFF: 29,
  DITCH: 30,
  ASPHALT_JOINT: 31
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    lengthAndAccuracy: (f = msg.getLengthAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f),
    distanceAndAccuracy: (f = msg.getDistanceAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics;
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setLengthAndAccuracy(value);
      break;
    case 3:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setDistanceAndAccuracy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLengthAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getDistanceAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy length_and_accuracy = 2;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.prototype.getLengthAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.prototype.setLengthAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.prototype.clearLengthAndAccuracy = function() {
  return this.setLengthAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.prototype.hasLengthAndAccuracy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy distance_and_accuracy = 3;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.prototype.getDistanceAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 3));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.prototype.setDistanceAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.prototype.clearDistanceAndAccuracy = function() {
  return this.setDistanceAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics.prototype.hasDistanceAndAccuracy = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeAndOffsetList: jspb.Message.toObjectList(msg.getTypeAndOffsetList(),
    proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets;
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.deserializeBinaryFromReader);
      msg.addTypeAndOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeAndOffsetList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offsetAndAccuracy: (f = msg.getOffsetAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset;
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setOffsetAndAccuracy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getOffsetAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.Type = {
  UNKNOWN_TYPE: 0,
  START_OF_MARKING: 1,
  END_OF_MARKING: 2,
  ON_MARKING: 3,
  NO_MARKING: 4
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.Type}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.Type} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy offset_and_accuracy = 2;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.prototype.getOffsetAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.prototype.setOffsetAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.prototype.clearOffsetAndAccuracy = function() {
  return this.setOffsetAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset.prototype.hasOffsetAndAccuracy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated TypeAndOffset type_and_offset = 2;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset>}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.prototype.getTypeAndOffsetList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset, 2));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.prototype.setTypeAndOffsetList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.prototype.addTypeAndOffset = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.TypeAndOffset, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets.prototype.clearTypeAndOffsetList = function() {
  return this.setTypeAndOffsetList([]);
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Int64Value lane_boundary_id = 2;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getLaneBoundaryId = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 2));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setLaneBoundaryId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearLaneBoundaryId = function() {
  return this.setLaneBoundaryId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasLaneBoundaryId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.Confidence existence_confidence = 3;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getExistenceConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 3));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setExistenceConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearExistenceConfidence = function() {
  return this.setExistenceConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasExistenceConfidence = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 4));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 5;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence, 5));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MarkingMaterialAndConfidence material_and_confidence = 6;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getMaterialAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence, 6));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setMaterialAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearMaterialAndConfidence = function() {
  return this.setMaterialAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasMaterialAndConfidence = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional MarkingColorAndConfidence color_and_confidence = 7;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getColorAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence, 7));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setColorAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearColorAndConfidence = function() {
  return this.setColorAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasColorAndConfidence = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional PositionReference position_reference = 8;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.PositionReference}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getPositionReference = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.PositionReference} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.PositionReference} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setPositionReference = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional sensoris.protobuf.types.spatial.PolylineAndAccuracy polyline_and_accuracy = 9;
 * @return {?proto.sensoris.protobuf.types.spatial.PolylineAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getPolylineAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.spatial.PolylineAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_spatial_pb.PolylineAndAccuracy, 9));
};


/**
 * @param {?proto.sensoris.protobuf.types.spatial.PolylineAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setPolylineAndAccuracy = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearPolylineAndAccuracy = function() {
  return this.setPolylineAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasPolylineAndAccuracy = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy width_and_accuracy = 10;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getWidthAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 10));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setWidthAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearWidthAndAccuracy = function() {
  return this.setWidthAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasWidthAndAccuracy = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy height_and_accuracy = 11;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getHeightAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 11));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setHeightAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearHeightAndAccuracy = function() {
  return this.setHeightAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasHeightAndAccuracy = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy distance_between_double_and_accuracy = 12;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getDistanceBetweenDoubleAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 12));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setDistanceBetweenDoubleAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearDistanceBetweenDoubleAndAccuracy = function() {
  return this.setDistanceBetweenDoubleAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasDistanceBetweenDoubleAndAccuracy = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional DashStatistics dash_statistics = 13;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getDashStatistics = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics, 13));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.DashStatistics|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setDashStatistics = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearDashStatistics = function() {
  return this.setDashStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasDashStatistics = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional MarkingOffsets marking_offsets = 14;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.getMarkingOffsets = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets, 14));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.MarkingOffsets|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.setMarkingOffsets = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.clearMarkingOffsets = function() {
  return this.setMarkingOffsets(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.prototype.hasMarkingOffsets = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    existenceConfidence: (f = msg.getExistenceConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.toObject(includeInstance, f),
    positionAndAccuracy: (f = msg.getPositionAndAccuracy()) && sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit;
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setExistenceConfidence(value);
      break;
    case 3:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 4:
      var value = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    case 5:
      var value = new sensoris_protobuf_types_spatial_pb.PositionAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.deserializeBinaryFromReader);
      msg.setPositionAndAccuracy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getExistenceConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getPositionAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  MERGE: 1,
  SPLIT: 2
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.Confidence existence_confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.getExistenceConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.setExistenceConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.clearExistenceConfidence = function() {
  return this.setExistenceConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.hasExistenceConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 3));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 4;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence, 4));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 5;
 * @return {?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.getPositionAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_spatial_pb.PositionAndAccuracy, 5));
};


/**
 * @param {?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.setPositionAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.clearPositionAndAccuracy = function() {
  return this.setPositionAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.prototype.hasPositionAndAccuracy = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.Lane.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.Lane} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    relativeLaneId: (f = msg.getRelativeLaneId()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    widthAndAccuracy: (f = msg.getWidthAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f),
    inclinationAndCurvature: (f = msg.getInclinationAndCurvature()) && proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.Lane;
  return proto.sensoris.protobuf.categories.roadattribution.Lane.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.Lane} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setRelativeLaneId(value);
      break;
    case 3:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setWidthAndAccuracy(value);
      break;
    case 4:
      var value = new proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.deserializeBinaryFromReader);
      msg.setInclinationAndCurvature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.Lane.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.Lane} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getRelativeLaneId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getWidthAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getInclinationAndCurvature();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Int64Value relative_lane_id = 2;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.getRelativeLaneId = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 2));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.setRelativeLaneId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.clearRelativeLaneId = function() {
  return this.setRelativeLaneId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.hasRelativeLaneId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy width_and_accuracy = 3;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.getWidthAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 3));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.setWidthAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.clearWidthAndAccuracy = function() {
  return this.setWidthAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.hasWidthAndAccuracy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional InclinationAndCurvature inclination_and_curvature = 4;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.getInclinationAndCurvature = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature, 4));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.setInclinationAndCurvature = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.clearInclinationAndCurvature = function() {
  return this.setInclinationAndCurvature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.Lane.prototype.hasInclinationAndCurvature = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.Road.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.Road} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.Road.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    widthAndAccuracy: (f = msg.getWidthAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f),
    inclinationAndCurvature: (f = msg.getInclinationAndCurvature()) && proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Road}
 */
proto.sensoris.protobuf.categories.roadattribution.Road.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.Road;
  return proto.sensoris.protobuf.categories.roadattribution.Road.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.Road} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Road}
 */
proto.sensoris.protobuf.categories.roadattribution.Road.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setWidthAndAccuracy(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.deserializeBinaryFromReader);
      msg.setInclinationAndCurvature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.Road.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.Road} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.Road.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getWidthAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getInclinationAndCurvature();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Road} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Road} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy width_and_accuracy = 2;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.getWidthAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Road} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.setWidthAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Road} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.clearWidthAndAccuracy = function() {
  return this.setWidthAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.hasWidthAndAccuracy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional InclinationAndCurvature inclination_and_curvature = 3;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature}
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.getInclinationAndCurvature = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature, 3));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Road} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.setInclinationAndCurvature = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Road} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.clearInclinationAndCurvature = function() {
  return this.setInclinationAndCurvature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.Road.prototype.hasInclinationAndCurvature = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    existenceConfidence: (f = msg.getExistenceConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.toObject(includeInstance, f),
    text: (f = msg.getText()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    colorAndConfidenceList: jspb.Message.toObjectList(msg.getColorAndConfidenceList(),
    proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.toObject, includeInstance),
    materialAndConfidenceList: jspb.Message.toObjectList(msg.getMaterialAndConfidenceList(),
    proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.toObject, includeInstance),
    rectangularBoxAndAccuracy: (f = msg.getRectangularBoxAndAccuracy()) && sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking;
  return proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setExistenceConfidence(value);
      break;
    case 3:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 4:
      var value = new proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 6:
      var value = new proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.deserializeBinaryFromReader);
      msg.addColorAndConfidence(value);
      break;
    case 7:
      var value = new proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.deserializeBinaryFromReader);
      msg.addMaterialAndConfidence(value);
      break;
    case 8:
      var value = new sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy.deserializeBinaryFromReader);
      msg.setRectangularBoxAndAccuracy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getExistenceConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getColorAndConfidenceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getMaterialAndConfidenceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getRectangularBoxAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  SIGN: 1,
  TEXT: 2,
  ICON: 3,
  PATTERN: 4,
  PATTERN_CROSSWALK: 5,
  LINE_ELEMENT: 6,
  STOP_LINE: 7
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.Confidence existence_confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.getExistenceConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.setExistenceConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.clearExistenceConfidence = function() {
  return this.setExistenceConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.hasExistenceConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 3));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 4;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence, 4));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.StringValue text = 5;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.getText = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 5));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.setText = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.clearText = function() {
  return this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.hasText = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated MarkingColorAndConfidence color_and_confidence = 6;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence>}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.getColorAndConfidenceList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence, 6));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.setColorAndConfidenceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.addColorAndConfidence = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.clearColorAndConfidenceList = function() {
  return this.setColorAndConfidenceList([]);
};


/**
 * repeated MarkingMaterialAndConfidence material_and_confidence = 7;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence>}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.getMaterialAndConfidenceList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence, 7));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.setMaterialAndConfidenceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.addMaterialAndConfidence = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.clearMaterialAndConfidenceList = function() {
  return this.setMaterialAndConfidenceList([]);
};


/**
 * optional sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;
 * @return {?proto.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.getRectangularBoxAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_spatial_pb.RectangularBoxAndAccuracy, 8));
};


/**
 * @param {?proto.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.setRectangularBoxAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.clearRectangularBoxAndAccuracy = function() {
  return this.setRectangularBoxAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.prototype.hasRectangularBoxAndAccuracy = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    positionAndAccuracy: (f = msg.getPositionAndAccuracy()) && sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.toObject(includeInstance, f),
    inclinationAndCurvature: (f = msg.getInclinationAndCurvature()) && proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.toObject(includeInstance, f),
    materialAndConfidenceList: jspb.Message.toObjectList(msg.getMaterialAndConfidenceList(),
    proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.toObject, includeInstance),
    roadRoughnessAndAccuracy: (f = msg.getRoadRoughnessAndAccuracy()) && sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution;
  return proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_spatial_pb.PositionAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.deserializeBinaryFromReader);
      msg.setPositionAndAccuracy(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.deserializeBinaryFromReader);
      msg.setInclinationAndCurvature(value);
      break;
    case 4:
      var value = new proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.deserializeBinaryFromReader);
      msg.addMaterialAndConfidence(value);
      break;
    case 5:
      var value = new sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.deserializeBinaryFromReader);
      msg.setRoadRoughnessAndAccuracy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getPositionAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getInclinationAndCurvature();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature.serializeBinaryToWriter
    );
  }
  f = message.getMaterialAndConfidenceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getRoadRoughnessAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
 * @return {?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.getPositionAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_spatial_pb.PositionAndAccuracy, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.setPositionAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.clearPositionAndAccuracy = function() {
  return this.setPositionAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.hasPositionAndAccuracy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional InclinationAndCurvature inclination_and_curvature = 3;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.getInclinationAndCurvature = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature, 3));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.setInclinationAndCurvature = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.clearInclinationAndCurvature = function() {
  return this.setInclinationAndCurvature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.hasInclinationAndCurvature = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated SurfaceMaterialAndConfidence material_and_confidence = 4;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence>}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.getMaterialAndConfidenceList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence, 4));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.setMaterialAndConfidenceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.addMaterialAndConfidence = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.sensoris.protobuf.categories.roadattribution.SurfaceMaterialAndConfidence, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.clearMaterialAndConfidenceList = function() {
  return this.setMaterialAndConfidenceList([]);
};


/**
 * optional sensoris.protobuf.types.base.Int64ValueAndAccuracy road_roughness_and_accuracy = 5;
 * @return {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.getRoadRoughnessAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Int64ValueAndAccuracy, 5));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Int64ValueAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.setRoadRoughnessAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.clearRoadRoughnessAndAccuracy = function() {
  return this.setRoadRoughnessAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.prototype.hasRoadRoughnessAndAccuracy = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    detectionStatus: (f = msg.getDetectionStatus()) && sensoris_protobuf_types_base_pb.EventDetectionStatus.toObject(includeInstance, f),
    positionAndAccuracy: (f = msg.getPositionAndAccuracy()) && sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.toObject(includeInstance, f),
    typeAndConfidence: (f = msg.getTypeAndConfidence()) && proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.toObject(includeInstance, f),
    changeTypeAndConfidence: (f = msg.getChangeTypeAndConfidence()) && proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.RoadAttribution;
  return proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.EventDetectionStatus;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventDetectionStatus.deserializeBinaryFromReader);
      msg.setDetectionStatus(value);
      break;
    case 3:
      var value = new sensoris_protobuf_types_spatial_pb.PositionAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.deserializeBinaryFromReader);
      msg.setPositionAndAccuracy(value);
      break;
    case 4:
      var value = new proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.deserializeBinaryFromReader);
      msg.setTypeAndConfidence(value);
      break;
    case 5:
      var value = new proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.deserializeBinaryFromReader);
      msg.setChangeTypeAndConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getDetectionStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.EventDetectionStatus.serializeBinaryToWriter
    );
  }
  f = message.getPositionAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getChangeTypeAndConfidence();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence;
  return proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  MOTORWAY: 1,
  ONE_WAY_TRAFFIC: 2,
  TWO_WAY_TRAFFIC: 3,
  OFFROAD: 4,
  TUNNEL: 5,
  BRIDGE: 6,
  ARTIFICIAL_ILLUMINATION: 7,
  ROAD_WORKS_NARROW_LANES: 8,
  LANE_RIGHT: 9,
  LANE_LEFT: 10,
  LANE_SPLIT_MIDDLE: 11,
  LANE_MERGE_MIDDLE: 12,
  CROSSWALK: 13,
  CENTER_TURN_LANE: 14
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: (f = msg.getConfidence()) && sensoris_protobuf_types_base_pb.Confidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence;
  return proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_base_pb.Confidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.Confidence.deserializeBinaryFromReader);
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_base_pb.Confidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  DETECTED: 1,
  START: 2,
  END: 3
};

/**
 * optional Type type = 1;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sensoris.protobuf.types.base.Confidence confidence = 2;
 * @return {?proto.sensoris.protobuf.types.base.Confidence}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.prototype.getConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.Confidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.Confidence, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.Confidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.prototype.setConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.prototype.clearConfidence = function() {
  return this.setConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence.prototype.hasConfidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.base.EventDetectionStatus detection_status = 2;
 * @return {?proto.sensoris.protobuf.types.base.EventDetectionStatus}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.getDetectionStatus = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventDetectionStatus} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventDetectionStatus, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventDetectionStatus|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.setDetectionStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.clearDetectionStatus = function() {
  return this.setDetectionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.hasDetectionStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 3;
 * @return {?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.getPositionAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_spatial_pb.PositionAndAccuracy, 3));
};


/**
 * @param {?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.setPositionAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.clearPositionAndAccuracy = function() {
  return this.setPositionAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.hasPositionAndAccuracy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TypeAndConfidence type_and_confidence = 4;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.getTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence, 4));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.TypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.setTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.clearTypeAndConfidence = function() {
  return this.setTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.hasTypeAndConfidence = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ChangeTypeAndConfidence change_type_and_confidence = 5;
 * @return {?proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.getChangeTypeAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence} */ (
    jspb.Message.getWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence, 5));
};


/**
 * @param {?proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.ChangeTypeAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.setChangeTypeAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.clearChangeTypeAndConfidence = function() {
  return this.setChangeTypeAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.prototype.hasChangeTypeAndConfidence = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.EventEnvelope.toObject(includeInstance, f),
    positionAndAccuracy: (f = msg.getPositionAndAccuracy()) && sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    countAndConfidence: (f = msg.getCountAndConfidence()) && sensoris_protobuf_types_base_pb.CountAndConfidence.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence;
  return proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.EventEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.EventEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new sensoris_protobuf_types_spatial_pb.PositionAndAccuracy;
      reader.readMessage(value,sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.deserializeBinaryFromReader);
      msg.setPositionAndAccuracy(value);
      break;
    case 3:
      var value = /** @type {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new sensoris_protobuf_types_base_pb.CountAndConfidence;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.CountAndConfidence.deserializeBinaryFromReader);
      msg.setCountAndConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.EventEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getPositionAndAccuracy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sensoris_protobuf_types_spatial_pb.PositionAndAccuracy.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCountAndConfidence();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      sensoris_protobuf_types_base_pb.CountAndConfidence.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.Type = {
  UNKNOWN_TYPE: 0,
  TOTAL: 1,
  LEFT_INCLUDING_EGO_LANE: 2,
  RIGHT: 3
};

/**
 * optional sensoris.protobuf.types.base.EventEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.EventEnvelope}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.EventEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.EventEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.EventEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
 * @return {?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.getPositionAndAccuracy = function() {
  return /** @type{?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_spatial_pb.PositionAndAccuracy, 2));
};


/**
 * @param {?proto.sensoris.protobuf.types.spatial.PositionAndAccuracy|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.setPositionAndAccuracy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.clearPositionAndAccuracy = function() {
  return this.setPositionAndAccuracy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.hasPositionAndAccuracy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Type type = 3;
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.Type}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.getType = function() {
  return /** @type {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.Type} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional sensoris.protobuf.types.base.CountAndConfidence count_and_confidence = 4;
 * @return {?proto.sensoris.protobuf.types.base.CountAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.getCountAndConfidence = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.CountAndConfidence} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.CountAndConfidence, 4));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.CountAndConfidence|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.setCountAndConfidence = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.clearCountAndConfidence = function() {
  return this.setCountAndConfidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.prototype.hasCountAndConfidence = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.repeatedFields_ = [2,3,4,5,6,7,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelope: (f = msg.getEnvelope()) && sensoris_protobuf_types_base_pb.CategoryEnvelope.toObject(includeInstance, f),
    laneBoundaryList: jspb.Message.toObjectList(msg.getLaneBoundaryList(),
    proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.toObject, includeInstance),
    laneBoundaryMergeSplitList: jspb.Message.toObjectList(msg.getLaneBoundaryMergeSplitList(),
    proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.toObject, includeInstance),
    laneList: jspb.Message.toObjectList(msg.getLaneList(),
    proto.sensoris.protobuf.categories.roadattribution.Lane.toObject, includeInstance),
    roadList: jspb.Message.toObjectList(msg.getRoadList(),
    proto.sensoris.protobuf.categories.roadattribution.Road.toObject, includeInstance),
    surfaceMarkingList: jspb.Message.toObjectList(msg.getSurfaceMarkingList(),
    proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.toObject, includeInstance),
    surfaceAttributionList: jspb.Message.toObjectList(msg.getSurfaceAttributionList(),
    proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.toObject, includeInstance),
    roadAttributionList: jspb.Message.toObjectList(msg.getRoadAttributionList(),
    proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.toObject, includeInstance),
    detectedLaneCountAndConfidenceList: jspb.Message.toObjectList(msg.getDetectedLaneCountAndConfidenceList(),
    proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.toObject, includeInstance),
    estimatedLaneCountAndConfidenceList: jspb.Message.toObjectList(msg.getEstimatedLaneCountAndConfidenceList(),
    proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory;
  return proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sensoris_protobuf_types_base_pb.CategoryEnvelope;
      reader.readMessage(value,sensoris_protobuf_types_base_pb.CategoryEnvelope.deserializeBinaryFromReader);
      msg.setEnvelope(value);
      break;
    case 2:
      var value = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundary;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.deserializeBinaryFromReader);
      msg.addLaneBoundary(value);
      break;
    case 3:
      var value = new proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.deserializeBinaryFromReader);
      msg.addLaneBoundaryMergeSplit(value);
      break;
    case 4:
      var value = new proto.sensoris.protobuf.categories.roadattribution.Lane;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.Lane.deserializeBinaryFromReader);
      msg.addLane(value);
      break;
    case 5:
      var value = new proto.sensoris.protobuf.categories.roadattribution.Road;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.Road.deserializeBinaryFromReader);
      msg.addRoad(value);
      break;
    case 6:
      var value = new proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.deserializeBinaryFromReader);
      msg.addSurfaceMarking(value);
      break;
    case 7:
      var value = new proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.deserializeBinaryFromReader);
      msg.addSurfaceAttribution(value);
      break;
    case 8:
      var value = new proto.sensoris.protobuf.categories.roadattribution.RoadAttribution;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.deserializeBinaryFromReader);
      msg.addRoadAttribution(value);
      break;
    case 9:
      var value = new proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.deserializeBinaryFromReader);
      msg.addDetectedLaneCountAndConfidence(value);
      break;
    case 10:
      var value = new proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence;
      reader.readMessage(value,proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.deserializeBinaryFromReader);
      msg.addEstimatedLaneCountAndConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sensoris_protobuf_types_base_pb.CategoryEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getLaneBoundaryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sensoris.protobuf.categories.roadattribution.LaneBoundary.serializeBinaryToWriter
    );
  }
  f = message.getLaneBoundaryMergeSplitList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit.serializeBinaryToWriter
    );
  }
  f = message.getLaneList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.sensoris.protobuf.categories.roadattribution.Lane.serializeBinaryToWriter
    );
  }
  f = message.getRoadList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.sensoris.protobuf.categories.roadattribution.Road.serializeBinaryToWriter
    );
  }
  f = message.getSurfaceMarkingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking.serializeBinaryToWriter
    );
  }
  f = message.getSurfaceAttributionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution.serializeBinaryToWriter
    );
  }
  f = message.getRoadAttributionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.sensoris.protobuf.categories.roadattribution.RoadAttribution.serializeBinaryToWriter
    );
  }
  f = message.getDetectedLaneCountAndConfidenceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.serializeBinaryToWriter
    );
  }
  f = message.getEstimatedLaneCountAndConfidenceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.serializeBinaryToWriter
    );
  }
};


/**
 * optional sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
 * @return {?proto.sensoris.protobuf.types.base.CategoryEnvelope}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.getEnvelope = function() {
  return /** @type{?proto.sensoris.protobuf.types.base.CategoryEnvelope} */ (
    jspb.Message.getWrapperField(this, sensoris_protobuf_types_base_pb.CategoryEnvelope, 1));
};


/**
 * @param {?proto.sensoris.protobuf.types.base.CategoryEnvelope|undefined} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.setEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.clearEnvelope = function() {
  return this.setEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.hasEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated LaneBoundary lane_boundary = 2;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary>}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.getLaneBoundaryList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary, 2));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.setLaneBoundaryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundary}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.addLaneBoundary = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sensoris.protobuf.categories.roadattribution.LaneBoundary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.clearLaneBoundaryList = function() {
  return this.setLaneBoundaryList([]);
};


/**
 * repeated LaneBoundaryMergeSplit lane_boundary_merge_split = 3;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit>}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.getLaneBoundaryMergeSplitList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit, 3));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.setLaneBoundaryMergeSplitList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.addLaneBoundaryMergeSplit = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.clearLaneBoundaryMergeSplitList = function() {
  return this.setLaneBoundaryMergeSplitList([]);
};


/**
 * repeated Lane lane = 4;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.Lane>}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.getLaneList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.Lane>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.Lane, 4));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.Lane>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.setLaneList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.Lane=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Lane}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.addLane = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.sensoris.protobuf.categories.roadattribution.Lane, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.clearLaneList = function() {
  return this.setLaneList([]);
};


/**
 * repeated Road road = 5;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.Road>}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.getRoadList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.Road>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.Road, 5));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.Road>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.setRoadList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.Road=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.Road}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.addRoad = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sensoris.protobuf.categories.roadattribution.Road, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.clearRoadList = function() {
  return this.setRoadList([]);
};


/**
 * repeated SurfaceMarking surface_marking = 6;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking>}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.getSurfaceMarkingList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking, 6));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.setSurfaceMarkingList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.addSurfaceMarking = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.sensoris.protobuf.categories.roadattribution.SurfaceMarking, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.clearSurfaceMarkingList = function() {
  return this.setSurfaceMarkingList([]);
};


/**
 * repeated SurfaceAttribution surface_attribution = 7;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution>}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.getSurfaceAttributionList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution, 7));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.setSurfaceAttributionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.addSurfaceAttribution = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.sensoris.protobuf.categories.roadattribution.SurfaceAttribution, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.clearSurfaceAttributionList = function() {
  return this.setSurfaceAttributionList([]);
};


/**
 * repeated RoadAttribution road_attribution = 8;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution>}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.getRoadAttributionList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.RoadAttribution, 8));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.setRoadAttributionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttribution}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.addRoadAttribution = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.sensoris.protobuf.categories.roadattribution.RoadAttribution, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.clearRoadAttributionList = function() {
  return this.setRoadAttributionList([]);
};


/**
 * repeated LaneCountAndConfidence detected_lane_count_and_confidence = 9;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence>}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.getDetectedLaneCountAndConfidenceList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence, 9));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.setDetectedLaneCountAndConfidenceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.addDetectedLaneCountAndConfidence = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.clearDetectedLaneCountAndConfidenceList = function() {
  return this.setDetectedLaneCountAndConfidenceList([]);
};


/**
 * repeated LaneCountAndConfidence estimated_lane_count_and_confidence = 10;
 * @return {!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence>}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.getEstimatedLaneCountAndConfidenceList = function() {
  return /** @type{!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence, 10));
};


/**
 * @param {!Array<!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence>} value
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
*/
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.setEstimatedLaneCountAndConfidenceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence}
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.addEstimatedLaneCountAndConfidence = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory} returns this
 */
proto.sensoris.protobuf.categories.roadattribution.RoadAttributionCategory.prototype.clearEstimatedLaneCountAndConfidenceList = function() {
  return this.setEstimatedLaneCountAndConfidenceList([]);
};


goog.object.extend(exports, proto.sensoris.protobuf.categories.roadattribution);
